// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NextCard.Models;

namespace NextCard.Migrations
{
    [DbContext(typeof(TicketContext))]
    [Migration("20210712123928_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NextCard.Models.Sprint", b =>
                {
                    b.Property<int>("SprintId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SprintId");

                    b.ToTable("Sprints");
                });

            modelBuilder.Entity("NextCard.Models.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusId");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            StatusId = 1,
                            Name = "Backlog"
                        },
                        new
                        {
                            StatusId = 2,
                            Name = "In Development"
                        },
                        new
                        {
                            StatusId = 3,
                            Name = "Quality Assurance"
                        },
                        new
                        {
                            StatusId = 4,
                            Name = "Done"
                        });
                });

            modelBuilder.Entity("NextCard.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PointValue")
                        .HasColumnType("int");

                    b.Property<string>("SprintId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SprintId1")
                        .HasColumnType("int");

                    b.Property<string>("StatusId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SprintId1");

                    b.HasIndex("StatusId1");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("NextCard.Models.Ticket", b =>
                {
                    b.HasOne("NextCard.Models.Sprint", "Sprint")
                        .WithMany()
                        .HasForeignKey("SprintId1");

                    b.HasOne("NextCard.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId1");
                });
#pragma warning restore 612, 618
        }
    }
}
